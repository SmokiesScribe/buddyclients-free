1728618565
0090ac72c51895f3f82252f110137bb6-phpdoc%3A24385f8e6cc1f40bb388cce12e088958-ab170e7ce7a7368c3df63b64bf4fa8ad
s:13672:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:21:"single-bc_service.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:1:{s:33:"\bc_single_service_dependencies()";O:38:"phpDocumentor\Reflection\Php\Function_":9:{s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:10:"service_id";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:98;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:140;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:33:"\bc_single_service_dependencies()";s:36:" phpDocumentor\Reflection\Fqsen name";s:30:"bc_single_service_dependencies";}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:43:"Retrieves and formats service dependencies.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Since":3:{s:7:" * name";s:5:"since";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:53:" phpDocumentor\Reflection\DocBlock\Tags\Since version";s:5:"0.1.0";}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}s:50:" phpDocumentor\Reflection\Php\Function_ attributes";a:0:{}}}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"ab170e7ce7a7368c3df63b64bf4fa8ad";s:39:" phpDocumentor\Reflection\Php\File path";s:31:"templates/single-bc_service.php";s:41:" phpDocumentor\Reflection\Php\File source";s:5574:"<?php
/**
 * Template Name: Single BC Service
 * Description: A custom template for a single bc_service post.
 */

    // Get header
    get_header();
    
    // Get post id
    $post_id = get_the_id();
    
    // Initialize
    $booking_form_btn = '';
    
    // Start building the content
    $service_content = '<div class="bc-single-service">';
    
    // Breadcrumbs
    $sep = '<i class="fa-solid fa-angle-right" style="margin: 0 8px; font-size: 12px;"></i>';
    $services_link = '<a href="' . esc_url(site_url('/services/')) . '">' . esc_html__('Services', 'buddyclients') . '</a>';
    $service_type = get_the_title(get_post_meta($post_id, 'service_type', true));
    $service_content .= '<p class="bc-single-brief-breadcrumbs">' . $services_link . $sep . esc_html($service_type) . $sep . esc_html(get_the_title()) . '</p>';
    
    // Content wrap
    $service_content .= '<div class="bc-single-service-content">';
    
    // Title
    $service_content .= '<h1 class="bc-service-name">' . esc_html(get_the_title()) . '</h1>';
    
    // Get post meta
    $service_type = get_post_meta($post_id, 'service_type', true);
    $rate_value = get_post_meta($post_id, 'rate_value', true);
    $rate_type = get_post_meta($post_id, 'rate_type', true);
    $hide_from_booking_form = get_post_meta($post_id, 'hide', true);
    $adjustments = get_post_meta($post_id, 'adjustments', true);
    
    // Build the rate type label
    if ($rate_type === 'flat') {
        $rate_type_label = esc_html__('flat', 'buddyclients');
    } else if ($rate_type) {
        $rate_type_label = esc_html__('per', 'buddyclients') . ' ' . strtolower(esc_html(get_post_meta($rate_type, 'singular', true)));
    } else {
        $rate_type_label = '';
    }
    
    // Define the rate label
    $rate_label = $adjustments ? esc_html__('Starting At', 'buddyclients') : esc_html__('Rate', 'buddyclients');
    
    // Display button if not hidden from form
    if (!$hide_from_booking_form) {
        $booking_page_id = bc_get_setting('pages', 'booking_page');
        if ($booking_page_id) {
            $booking_page_url = get_the_permalink($booking_page_id);
            $booking_form_btn = '<a href="' . esc_url($booking_page_url) . '"><button class="booking-form-btn">' . esc_html__('Book Now', 'buddyclients') . '</button></a>';
        }
    }
    
    // Get dependencies links
    $dependency_link = bc_single_service_dependencies($post_id);
    
    // Build single service content
    $service_content .= '<div class="bc-service-post-content">';
    $service_content .= wp_kses_post(get_the_content());
    $service_content .= '</div>';
    
    $service_content .= $booking_form_btn;
    
    // Details
    $service_content .= '<div class="bc-service-details">';
    
    $dependency_link = $dependency_link ? '<p>' . esc_html__('This service requires', 'buddyclients') . ' ' . $dependency_link . '</p>' : '';
    $rate_line = $rate_value ? '<p><b>' . esc_html($rate_label) . '</b>: $' . esc_html($rate_value) . ' ' . esc_html($rate_type_label) . '</p>' : '';
    
    $service_content .= $rate_line;
    $service_content .= $dependency_link;
    
    $services_archive = esc_url(site_url('/services/'));
    $all_services_button = '<a href="' . $services_archive . '" class="all-services-btn">' . esc_html__('All Services', 'buddyclients') . '</a>';
    
    // Append the additional content to the post content
    $service_content .= $all_services_button;
    
    $service_content .= '</div>';
    $service_content .= '</div>';
    $service_content .= '</div>';
    
    echo $service_content;
    
    // Get footer
    get_footer();
    
    /**
     * Retrieves and formats service dependencies.
     * 
     * @since 0.1.0
     */
    function bc_single_service_dependencies($service_id) {
        // Get dependencies
        $dependencies = get_post_meta($service_id, 'dependency', true);
        
        // Initialize
        $dependency_array = array();
        $dependency_link = '';
        
        if ($dependencies) {
            // Process each element in the inner array
            foreach ($dependencies as $dependency_id) {
                // Ensure $value is not empty before using it
                if (!empty($dependency_id)) {
                    $dependency_name = get_the_title($dependency_id);
                    $dependency_url = get_permalink($dependency_id);
                    
                    $dependency_array[] = '<a href="' . esc_url($dependency_url) . '">' . esc_html($dependency_name) . '</a>';
                }
            }
            
            // Construct human-readable list
            if (!empty($dependency_array)) {
                $count = count($dependency_array);
                $dependency_list = '';
                for ($i = 0; $i < $count; $i++) {
                    // Add item number and link
                    $dependency_list .= $dependency_array[$i];
                    
                    // Add comma before "or" when there are more than two items
                    if ($count > 2 && $i == $count - 2) {
                        $dependency_list .= ', ' . esc_html__('or', 'buddyclients') . ' ';
                    } elseif ($i == $count - 2) {
                        $dependency_list .= ' ' . esc_html__('or', 'buddyclients') . ' ';
                    } elseif ($i < $count - 1) {
                        $dependency_list .= ', ';
                    }
                }
            }
    
            $dependency_link = $dependency_list . '.';
        }
        return $dependency_link;
    }";s:43:" phpDocumentor\Reflection\Php\File docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:93:"Template Name: Single BC Service
Description: A custom template for a single bc_service post.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";