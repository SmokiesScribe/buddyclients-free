1728618565
0090ac72c51895f3f82252f110137bb6-phpdoc%3A2a445b36529141eb2bc70a1cdf4c67e4-e2ac45b3e403f3346a106ce534e6b668
s:7664:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjIyOiJhcmNoaXZlLWJjX3NlcnZpY2UucGhwIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e31zOjQwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGVudW1zIjthOjA6e31zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImUyYWM0NWIzZTQwM2YzMzQ2YTEwNmNlNTM0ZTZiNjY4IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6MzI6InRlbXBsYXRlcy9hcmNoaXZlLWJjX3NlcnZpY2UucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czozOTAxOiI8P3BocAovKioKICogVGVtcGxhdGUgTmFtZTogQ3VzdG9tIEJDIFNlcnZpY2UgQXJjaGl2ZQogKiBEZXNjcmlwdGlvbjogQSBjdXN0b20gdGVtcGxhdGUgZm9yIHRoZSBiY19zZXJ2aWNlIHBvc3QgdHlwZSBhcmNoaXZlLgogKi8KCi8vIEdldCBoZWFkZXIKZ2V0X2hlYWRlcigpOwoKLy8gSW5pdGlhbGl6ZSBjb250ZW50CiRjb250ZW50ID0gJyc7CgokYXJncyA9IGFycmF5KAogICAgJ3Bvc3RfdHlwZScgICAgICA9PiAnYmNfc2VydmljZV90eXBlJywKICAgICdwb3N0c19wZXJfcGFnZScgPT4gLTEsCiAgICAnbWV0YV9xdWVyeScgPT4gYXJyYXkoCiAgICAgICAgJ3JlbGF0aW9uJyA9PiAnT1InLAogICAgICAgIGFycmF5KAogICAgICAgICAgICAna2V5JyAgICAgPT4gJ29yZGVyJywKICAgICAgICAgICAgJ2NvbXBhcmUnID0+ICdFWElTVFMnLCAvLyBDaGVjayBpZiB0aGUgbWV0YSBrZXkgZXhpc3RzCiAgICAgICAgKSwKICAgICAgICBhcnJheSgKICAgICAgICAgICAgJ2tleScgICAgID0+ICdvcmRlcicsCiAgICAgICAgICAgICdjb21wYXJlJyA9PiAnTk9UIEVYSVNUUycsIC8vIENoZWNrIGlmIHRoZSBtZXRhIGtleSBkb2VzIG5vdCBleGlzdAogICAgICAgICksCiAgICApLAogICAgJ29yZGVyYnknICAgID0+ICdtZXRhX3ZhbHVlX251bScsIC8vIE9yZGVyIGJ5IG51bWVyaWMgbWV0YSB2YWx1ZQogICAgJ29yZGVyJyAgICAgID0+ICdERVNDJywgLy8gT3JkZXIgaW4gZGVzY2VuZGluZyBvcmRlcgopOwoKLy8gR2V0IHRoZSBzZXJ2aWNlcwokdHlwZXMgPSBnZXRfcG9zdHMoJGFyZ3MpOwoKLy8gQ2hlY2sgaWYgYW55IHRlcm1zIGFyZSByZXR1cm5lZAppZiAoZW1wdHkoJHR5cGVzKSB8fCBpc193cF9lcnJvcigkdHlwZXMpKSB7CiAgICAkdHlwZXMgPSBhcnJheSgpOwp9CgovLyBBZGQgZW1wdHkgc3RyaW5nIHRvIGFycmF5CiR0eXBlc1tdID0gJyc7CgovLyBTdGFydCBidWlsZGluZyB0aGUgY29udGVudAokY29udGVudCAuPSAnPGRpdiBjbGFzcz0icmF0ZS1jYXJkcyBiYy1hcmNoaXZlLWNvbnRhaW5lciI+JzsKCi8vIEJ1aWxkIHRpdGxlCiRjb250ZW50IC49ICc8ZGl2IGNsYXNzPSJhcmNoaXZlLXRpdGxlLWNvbnRhaW5lciI+JzsKJGNvbnRlbnQgLj0gJzxoMT4nIC4gZXNjX2h0bWxfXygnU2VydmljZXMnLCAnYnVkZHljbGllbnRzJykgLiAnPC9oMT4nOwokY29udGVudCAuPSAnPC9kaXY+JzsKCi8vIExvb3AgdGhyb3VnaCBlYWNoIHR5cGUKZm9yZWFjaCAoJHR5cGVzIGFzICR0eXBlKSB7CiAgICBpZiAoJHR5cGUgIT09ICcnKSB7CiAgICAgICAgJHR5cGVfaWQgPSAkdHlwZS0+SUQ7CiAgICAgICAgJHR5cGVfbmFtZSA9ICR0eXBlLT5wb3N0X3RpdGxlOwogICAgICAgICR0eXBlX3NsdWcgPSAkdHlwZS0+bmFtZTsKICAgIH0KCiAgICAkc2VydmljZV9hcmdzID0gYXJyYXkoCiAgICAgICAgJ3Bvc3RfdHlwZScgICAgICA9PiAnYmNfc2VydmljZScsCiAgICAgICAgJ3Bvc3RzX3Blcl9wYWdlJyA9PiAtMSwgLy8gUmV0cmlldmUgYWxsIHBvc3RzCiAgICApOwoKICAgIGlmICgkdHlwZSAhPT0gJycpIHsKICAgICAgICAkc2VydmljZV9hcmdzWydtZXRhX3F1ZXJ5J10gPSBhcnJheSgKICAgICAgICAgICAgYXJyYXkoCiAgICAgICAgICAgICAgICAna2V5JyA9PiAnc2VydmljZV90eXBlJywKICAgICAgICAgICAgICAgICd2YWx1ZScgICAgPT4gJHR5cGVfaWQsCiAgICAgICAgICAgICksCiAgICAgICAgKTsKICAgIH0gZWxzZSB7CiAgICAgICAgJHNlcnZpY2VfYXJnc1snbWV0YV9xdWVyeSddID0gYXJyYXkoCiAgICAgICAgICAgIGFycmF5KAogICAgICAgICAgICAgICAgJ2tleScgPT4gJ3NlcnZpY2VfdHlwZScsCiAgICAgICAgICAgICAgICAndmFsdWUnID0+ICcnLAogICAgICAgICAgICApLAogICAgICAgICk7CiAgICB9CgogICAgLy8gR2V0IHRoZSBzZXJ2aWNlcwogICAgJHNlcnZpY2VzID0gZ2V0X3Bvc3RzKCRzZXJ2aWNlX2FyZ3MpOwoKICAgIGlmICghJHNlcnZpY2VzKSB7CiAgICAgICAgY29udGludWU7IC8vIGV4aXQgaWYgbm8gcG9zdHMgZm91bmQKICAgIH0gZWxzZSB7CiAgICAgICAgZm9yZWFjaCAoJHNlcnZpY2VzIGFzICRzZXJ2aWNlKSB7CiAgICAgICAgICAgICRyYXRlX3RpdGxlID0gJHNlcnZpY2UtPnBvc3RfdGl0bGU7IC8vIENvcnJlY3RlZCB0byB1c2UgcG9zdF90aXRsZQogICAgICAgICAgICAkcG9zdF9pZCA9ICRzZXJ2aWNlLT5JRDsgLy8gQ29ycmVjdGVkIHRvIHVzZSBJRAogICAgICAgICAgICAkZmVhdHVyZWRfaW1hZ2UgPSBnZXRfdGhlX3Bvc3RfdGh1bWJuYWlsX3VybCgkcG9zdF9pZCk7CgogICAgICAgICAgICAvLyBDaGVjayBpZiBoaWRkZW4gQHRvZG8KCiAgICAgICAgICAgIC8vIEdldCBzZXJ2aWNlIHR5cGUKICAgICAgICAgICAgJHR5cGUgPSBnZXRfcG9zdF9tZXRhKCRwb3N0X2lkLCAnc2VydmljZV90eXBlJywgdHJ1ZSk7CgogICAgICAgICAgICAvLyBCdWlsZCBzZXJ2aWNlIHR5cGUgbGFiZWwKICAgICAgICAgICAgaWYgKCR0eXBlKSB7CiAgICAgICAgICAgICAgICAkdHlwZV9pZCA9IGdldF90aGVfaWQoJHR5cGUpOwogICAgICAgICAgICAgICAgJHR5cGVfbmFtZSA9IGdldF90aGVfdGl0bGUoJHR5cGUpOwogICAgICAgICAgICAgICAgJHNlcnZpY2VfdHlwZV9sYWJlbCA9ICc8cCBjbGFzcz0ic2VydmljZS10eXBlLWxhYmVsIHNlcnZpY2UtdHlwZS1sYWJlbC0nIC4gZXNjX2F0dHIoJHR5cGVfaWQpIC4gJyI+JyAuIGVzY19odG1sKCR0eXBlX25hbWUpIC4gJzwvcD4nOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgJHNlcnZpY2VfdHlwZV9sYWJlbCA9ICc8cD48L3A+JzsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy8gVHJ1bmNhdGUgdGhlIGNvbnRlbnQgdG8gYSBzcGVjaWZpZWQgbnVtYmVyIG9mIHdvcmRzIChlLmcuLCAyNSB3b3JkcykKICAgICAgICAgICAgJHBvc3RfaW5mbyA9IGJjX3RydW5jYXRlX2NvbnRlbnQoJHNlcnZpY2UtPnBvc3RfY29udGVudCwgMjUpOwoKICAgICAgICAgICAgLy8gQWRkIHRoZSByYXRlIGNhcmQKICAgICAgICAgICAgJGNvbnRlbnQgLj0gJwogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icmF0ZS1wb3N0Ij4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iY3VzdG9tLXJhdGUtbGluayIgaHJlZj0iJyAuIGVzY191cmwoZ2V0X3RoZV9wZXJtYWxpbmsoJHBvc3RfaWQpKSAuICciPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyYXRlLWNhcmQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icmF0ZS1jb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3M9InJhdGUtdGl0bGUiPicgLiBlc2NfaHRtbCgkcmF0ZV90aXRsZSkgLiAnPC9oMz4nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLiAkc2VydmljZV90eXBlX2xhYmVsIC4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz0icmF0ZS1leGNlcnB0Ij4nIC4gZXNjX2h0bWwoJHBvc3RfaW5mbykgLiAnPHNwYW4+IDxpPicgLiBlc2NfaHRtbF9fKCdMZWFybiBtb3JlLicsICdidWRkeWNsaWVudHMnKSAuICc8L2k+PC9zcGFuPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvZGl2Pic7CiAgICAgICAgfQogICAgfQoKICAgIHdwX3Jlc2V0X3Bvc3RkYXRhKCk7IC8vIFJlc3RvcmUgdGhlIGdsb2JhbCBwb3N0IGRhdGEKfQoKLy8gQ2xvc2UgdGhlIGNvbnRhaW5lcgokY29udGVudCAuPSAnPC9kaXY+JzsKCi8vIE91dHB1dCB0aGUgY29udGVudAplY2hvICRjb250ZW50OwoKLy8gR2V0IGZvb3RlcgpnZXRfZm9vdGVyKCk7Cj8+IjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czoxMDk6IlRlbXBsYXRlIE5hbWU6IEN1c3RvbSBCQyBTZXJ2aWNlIEFyY2hpdmUKRGVzY3JpcHRpb246IEEgY3VzdG9tIHRlbXBsYXRlIGZvciB0aGUgYmNfc2VydmljZSBwb3N0IHR5cGUgYXJjaGl2ZS4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQiOjI6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2UiO3M6MDoiIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlQWxpYXNlcyI7YTowOnt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBtZXRhZGF0YSI7YTowOnt9fQ==";