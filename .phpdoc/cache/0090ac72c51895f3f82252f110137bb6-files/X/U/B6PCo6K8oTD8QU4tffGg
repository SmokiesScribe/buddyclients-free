1728618565
0090ac72c51895f3f82252f110137bb6-phpdoc%3A81346c6f88cc009503b915b16bfc8afb-490807eabfb11aacf1bdb51d5e3f0923
s:23672:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:18:"create-account.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:3:{s:29:"\bc_checkout_create_account()";O:38:"phpDocumentor\Reflection\Php\Function_":9:{s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:0:{}s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:22;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:110;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:29:"\bc_checkout_create_account()";s:36:" phpDocumentor\Reflection\Fqsen name";s:26:"bc_checkout_create_account";}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:38:"Handle create account form submission.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:22:"Called by AJAX script.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Since":3:{s:7:" * name";s:5:"since";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:53:" phpDocumentor\Reflection\DocBlock\Tags\Since version";s:5:"0.1.0";}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}s:50:" phpDocumentor\Reflection\Php\Function_ attributes";a:0:{}}s:32:"\bc_validate_password_strength()";O:38:"phpDocumentor\Reflection\Php\Function_":9:{s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:8:"password";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:125;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:152;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:32:"\bc_validate_password_strength()";s:36:" phpDocumentor\Reflection\Fqsen name";s:29:"bc_validate_password_strength";}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:28:"Validates password strength.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:51:"Checks if the password meets strength requirements.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:3:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Since":3:{s:7:" * name";s:5:"since";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:53:" phpDocumentor\Reflection\DocBlock\Tags\Since version";s:5:"0.1.0";}i:1;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:25:"The password to validate.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:8:"password";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;}i:2;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:58:"Returns error message if validation fails, otherwise null.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:36:"phpDocumentor\Reflection\Types\Null_":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}s:50:" phpDocumentor\Reflection\Php\Function_ attributes";a:0:{}}s:25:"\bc_generate_login_name()";O:38:"phpDocumentor\Reflection\Php\Function_":9:{s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:10:"first_name";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:161;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:174;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:25:"\bc_generate_login_name()";s:36:" phpDocumentor\Reflection\Fqsen name";s:22:"bc_generate_login_name";}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:21:"Generates login name.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:54:"Checks against existing users to ensure unique handle.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Since":3:{s:7:" * name";s:5:"since";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:53:" phpDocumentor\Reflection\DocBlock\Tags\Since version";s:5:"0.1.0";}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}s:50:" phpDocumentor\Reflection\Php\Function_ attributes";a:0:{}}}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"490807eabfb11aacf1bdb51d5e3f0923";s:39:" phpDocumentor\Reflection\Php\File path";s:35:"includes/helpers/create-account.php";s:41:" phpDocumentor\Reflection\Php\File source";s:7341:"<?php
use BuddyClients\Components\Booking\BookingIntent   as BookingIntent;
use BuddyClients\Includes\Project                   as Project;

use BuddyEvents\Includes\{
    Registration\RegistrationIntent as RegistrationIntent,
    SponsorIntent as SponsorIntent
};

/**
 * Checkout page new account form submission.
 * 
 * @since 0.1.0
 */
    /**
     * Handle create account form submission.
     * 
     * Called by AJAX script.
     * 
     * @since 0.1.0
     */
    function bc_checkout_create_account() {
        // Ensure the request is from an authenticated user if required
        if ( ! defined( 'DOING_AJAX' ) || ! DOING_AJAX ) {
            wp_send_json_error(__('Invalid request', 'buddyclients'));
            wp_die();
        }
        
        // Make sure all data is present
        if (isset($_POST['username']) && isset($_POST['email']) && isset($_POST['password'])
        && ( isset( $_POST['booking_intent_id'] ) || isset( $_POST['registration_intent_id'] ) || isset( $_POST['sponsor_intent_id'] ) ) ) {
            $user_name = $_POST['username'];
            $user_email = $_POST['email'];
            $user_password = $_POST['password'];
            $booking_intent_id = $_POST['booking_intent_id'] ?? null;
            $registration_intent_id = $_POST['registration_intent_id'] ?? null;
            $sponsor_intent_id = $_POST['sponsor_intent_id'] ?? null;
            
            // Validate password strength
            $password_error = bc_validate_password_strength( $user_password );
            if ( $password_error ) {
                wp_send_json_error($password_error);
                wp_die();
            }
            
            // Build login name
            $user_login = bc_generate_login_name($user_name);
        
            // Create account
            $new_user_id = wp_create_user($user_login, $user_password, $user_email);
        
            // Check if user creation was successful
            if (!is_wp_error($new_user_id)) {
                
                // Update first name with wp
                wp_update_user([
                    'ID' => $new_user_id,
                    'first_name' => $user_name,
                ]);
                
                // Update Booking info
                if ( $booking_intent_id && $booking_intent_id !== '' ) {
                    // Update client type
                    $client_type = bc_get_setting( 'general', 'default_client_type' );
                    bp_set_member_type( $new_user_id, $client_type, true ); // append to existing
                    
                    // Update BookingIntent
                    BookingIntent::update_client_id( $booking_intent_id, $new_user_id );
                    BookingIntent::update_client_email( $booking_intent_id, $user_email );
                }
                
                // Attendee type
                if ( $registration_intent_id && $registration_intent_id !== '' && class_exists( RegistrationIntent::class ) ) {
                    $attendee_type = bc_get_setting( 'event', 'attendee_type' );
                    bp_set_member_type( $new_user_id, $attendee_type, true ); // append to existing
                    
                    // Update RegistrationIntent
                    RegistrationIntent::update_attendee_id( $registration_intent_id, $new_user_id );
                    RegistrationIntent::update_attendee_email( $registration_intent_id, $user_email );
                }
                
                // Update SponsorIntent
                if ( $sponsor_intent_id && $sponsor_intent_id !== ''  && class_exists( SponsorIntent::class ) ) {
                    // Update SponsorIntent
                    SponsorIntent::update_user_id( $sponsor_intent_id, $new_user_id );
                    SponsorIntent::update_user_email( $sponsor_intent_id, $user_email );
                }
                
                /**
                 * Fires after creation of new user during checkout.
                 * 
                 * @since 0.1.0
                 * 
                 * @param int $user_id The ID of the newly created user.
                 */
                do_action( 'bc_created_user', $new_user_id, $booking_intent_id );
                
                // Return new user ID on success
                wp_send_json_success(['user_id' => $new_user_id]);
                
            } else {
                // Return error message on failure
                $error_message = $new_user_id->get_error_message();
                wp_send_json_error(__('Error creating user: ', 'buddyclients') . $error_message);
            }
            
            // Terminate script execution
            wp_die();
        }
    }
    // Hook to ajax
    add_action('wp_ajax_bc_checkout_create_account', 'bc_checkout_create_account');
    add_action('wp_ajax_nopriv_bc_checkout_create_account', 'bc_checkout_create_account');
    
    /**
     * Validates password strength.
     *
     * Checks if the password meets strength requirements.
     *
     * @since 0.1.0
     *
     * @param string $password The password to validate.
     * @return string|null Returns error message if validation fails, otherwise null.
     */
    function bc_validate_password_strength( $password ) {
        // Define basic strength criteria
        $min_length = 8; // Minimum length
        $has_uppercase = preg_match('/[A-Z]/', $password); // At least one uppercase letter
        $has_lowercase = preg_match('/[a-z]/', $password); // At least one lowercase letter
        $has_number = preg_match('/\d/', $password); // At least one digit
        $has_special = preg_match('/[\W]/', $password); // At least one special character
    
        // Check password against criteria
        if (strlen($password) < $min_length) {
            return sprintf(__('Password must be at least %d characters long.', 'buddyclients'), $min_length);
        }
        if (!$has_uppercase) {
            return __('Password must include at least one uppercase letter.', 'buddyclients');
        }
        if (!$has_lowercase) {
            return __('Password must include at least one lowercase letter.', 'buddyclients');
        }
        if (!$has_number) {
            return __('Password must include at least one number.', 'buddyclients');
        }
        if (!$has_special) {
            return __('Password must include at least one special character.', 'buddyclients');
        }
    
        // Return null if all criteria are met
        return null;
    }
    
    /**
     * Generates login name.
     * 
     * Checks against existing users to ensure unique handle.
     * 
     * @since 0.1.0
     */
    function bc_generate_login_name($first_name) {
        // Convert first name to lowercase and remove special characters
        $login_name = strtolower(preg_replace('/[^a-zA-Z0-9]/', '', $first_name));
        
        // Check if the login name already exists
        $suffix = 1;
        $original_login_name = $login_name; // Store the original login name without suffix
        while (username_exists($login_name)) {
            // If the login name exists, add a random number suffix and try again
            $login_name = $original_login_name . rand(1, 999); // Add a random number
            $suffix++;
        }
        return $login_name;
    }";s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";